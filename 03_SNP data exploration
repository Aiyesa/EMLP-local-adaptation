--------------------------------------------------------------------------------------------------------------------------------------------
## 1. Merging vcf files for all chromosomes

library(data.table)
vcf_all <- NULL

#### import vcf file header and varaints seperately for each chromosome and merge all chromosomes

for (i in 1:10) {
  file <- paste0("zea_geno_chr", i, ".filtered.vcf.gz")
  header <- paste0("chr_", i)
  data <- paste0("chr_", i, "data")
  
  # read two times the vcf file, first for the columns names, second for the data
  header <- readLines(file)
  data <-read.table(file, stringsAsFactors = FALSE)
  
  # filter for the columns names
  header<-header[-(grep("#CHROM",header)+1):-(length(header))]
  vcf_names<-unlist(strsplit(header[length(header)],"\t"))
  
  vcf_all <- rbind(vcf_all, data)
}

--------------------------------------------------------------------------------------------------------------------------------------------
## 2. Recode genotype for ./. to NA, 0/0 to 0, 1/1 to 2, 0/1 and 1/0 to 1. 
library(reshape2)
vcf_all <- fread("vcf_all_chrom.txt")

#### remove multi-allelic loci (e.g "A,C", "A,G", "A,T", "G,C,T") using regular pattern ","
vcf_all_1 <- vcf_all[!grepl(",", vcf_all$ALT), ] 
vcf_all_1 <- as.data.frame(vcf_all_1)

#### recode varaint - 0/1, here 0 is ref allele and 1 is alt. ./. is missing

for(i in 850:ncol(vcf_all_1)){
  ind_snp <- vcf_all_1[,i]
  ind_snp <- colsplit(ind_snp, ":", c(1:7))
  ind_snp2 <- ifelse(ind_snp$`1` == "./.", NA, 
			ifelse(ind_snp$`1` == "0/0", 0, 
				ifelse(ind_snp$`1` == "1/1", 2,
                                 ifelse(ind_snp$`1` == "0/1", 1, 
					ifelse(ind_snp$`1` == "1/0", 1, ind_snp$`1`)))))
  vcf_all_1[, i] <- ind_snp2
}

for (i in 10:ncol(vcf_all_1)) {
  vcf_all_1[,i] <- as.numeric(vcf_all_1[,i])
}

fwrite(vcf_all_1, "snp_numeric_data.txt")

--------------------------------------------------------------------------------------------------------------------------------------------
## 3. SNP marker properties - MAF, Ho, He, PIC

library(snpReady)
library(ggplot2)
library(ggpubr)
library(CMplot)

snpdata <- read.table("snp_numeric_data.txt")
ind_prop <- popgen(t(snpdata[-c(1:10)])

markers <- ind_prop$whole$Markers

## distribution of MAF, Ho, and PIC

a <- ggplot(markers, aes(x = MAF)) + geom_density(fill = "dodgerblue1", colour = "black", alpha = 0.3) + theme_light()
b <- ggplot(markers, aes(x = Ho)) + geom_density(fill = "dodgerblue1", colour = "black", alpha = 0.3) + theme_light()
c<- ggplot(markers, aes(x = He)) + geom_density(fill = "dodgerblue1", colour = "black", alpha = 0.3) + theme_light()
d <- ggplot(markers, aes(x = PIC)) + geom_density(fill = "dodgerblue1", colour = "black", alpha = 0.3) + theme_light()
ggarrange(a,b,c,d, ncol = 2, nrow = 2, labels = "AUTO")

## Distribution of SNP per 1 Mb
map <- snpdata[,c(1:3)]
map <- map[,c(3,1,2)]
colnames(map) <- c("SNP", "Chromosome", "Position")
map$Chromosome <- as.factor(map$Chromosome)
--------------------------------------------------------------------------------------------------------------------------------------------
## snp density per Mb
CMplot(map,plot.type="d",bin.size=1e6,chr.den.col=c("steelblue", "yellow", "red"),file="jpg",file.name="",dpi=300,
    main="illumilla_60K",file.output=FALSE,verbose=TRUE,width=11,height=6)
--------------------------------------------------------------------------------------------------------------------------------------------
